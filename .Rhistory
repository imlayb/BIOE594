p3<-qplot(race,data=meta)+ggtitle("Race")+coord_flip()+theme_classic()
p4<-qplot(face,data=meta)+ggtitle("Face")+coord_flip()+theme_classic()
p5<-qplot(prop,data=meta)+ggtitle("Prop")+coord_flip()+theme_classic()
grid.arrange(p1,p2,p3,p4,p5,tableGrob(count(meta_TR[,2:3]),rows=NULL),ncol=3,top="Exploratory Data Analysis")}
foo()
foo<-function() {p1<-qplot(sex,data=meta)+ggtitle("Sex")+coord_flip()+theme_classic()
p2<-qplot(age,data=meta)+ggtitle("Age")+coord_flip()+theme_classic()
p3<-qplot(race,data=meta)+ggtitle("Race")+coord_flip()+theme_classic()
p4<-qplot(face,data=meta)+ggtitle("Face")+coord_flip()+theme_classic()
p5<-qplot(prop,data=meta)+ggtitle("Prop")+coord_flip()+theme_classic()
grid.arrange(p1,p2,p3,p4,p5,tableGrob(count(meta[,2:3]),rows=NULL),ncol=3,top="Exploratory Data Analysis")}
foo()
count(meta_TR[,2:3])
meta_TR<-importMetaMatrix("faces/faceDR")
meta_T<-importMetaMatrix("faces/faceDS")
meta_TR<-meta_TR[meta_TR$n %in% rownames(dat),] # Remove any examples from metadata that are not in the data.
meta_T<-meta_T[meta_T$n %in% rownames(dat),]
meta<-rbind(meta_TR,meta_T)
rownames(meta)<-meta$n
meta<-meta[rownames(dat),]
#rm(dat)
set.seed(1234)
trainIndex <- createDataPartition(meta$sex, p = .8,
list = FALSE,
times = 1)
meta_TR<-meta[trainIndex,]
meta_T<-meta[-trainIndex,]
dat_TR<-dat[trainIndex,]
dat_T<-dat[-trainIndex,]
foo<-function() {p1<-qplot(sex,data=meta_TR)+ggtitle("Sex")+coord_flip()+theme_classic()
p2<-qplot(age,data=meta_TR)+ggtitle("Age")+coord_flip()+theme_classic()
p3<-qplot(race,data=meta_TR)+ggtitle("Race")+coord_flip()+theme_classic()
p4<-qplot(face,data=meta_TR)+ggtitle("Face")+coord_flip()+theme_classic()
p5<-qplot(prop,data=meta_TR)+ggtitle("Prop")+coord_flip()+theme_classic()
grid.arrange(p1,p2,p3,p4,p5,tableGrob(count(meta_TR[,2:3]),rows=NULL),ncol=3,top="Exploratory Data Analysis")}
foo()
foo<-function() {p1<-qplot(sex,data=meta_TR)+ggtitle("Sex")+coord_flip()+theme_classic()
p2<-qplot(age,data=meta_TR)+ggtitle("Age")+coord_flip()+theme_classic()
p3<-qplot(race,data=meta_TR)+ggtitle("Race")+coord_flip()+theme_classic()
p4<-qplot(face,data=meta_TR)+ggtitle("Face")+coord_flip()+theme_classic()
p5<-qplot(prop,data=meta_TR)+ggtitle("Prop")+coord_flip()+theme_classic()
grid.arrange(p1,p2,p3,p4,p5,tableGrob(count(as.data.frame(meta_TR[,2:3])),rows=NULL),ncol=3,top="Exploratory Data Analysis")}
foo()
count(meta[,2:3])
count(meta[,2:4])
table(meta[,2:3])
foo<-function() {p1<-qplot(sex,data=meta_TR)+ggtitle("Sex")+coord_flip()+theme_classic()
p2<-qplot(age,data=meta_TR)+ggtitle("Age")+coord_flip()+theme_classic()
p3<-qplot(race,data=meta_TR)+ggtitle("Race")+coord_flip()+theme_classic()
p4<-qplot(face,data=meta_TR)+ggtitle("Face")+coord_flip()+theme_classic()
p5<-qplot(prop,data=meta_TR)+ggtitle("Prop")+coord_flip()+theme_classic()
grid.arrange(p1,p2,p3,p4,p5,tableGrob(table(as.data.frame(meta_TR[,2:3])),rows=NULL),ncol=3,top="Exploratory Data Analysis")}
foo()
foo<-function() {p1<-qplot(sex,data=meta_TR)+ggtitle("Sex")+coord_flip()+theme_classic()
p2<-qplot(age,data=meta_TR)+ggtitle("Age")+coord_flip()+theme_classic()
p3<-qplot(race,data=meta_TR)+ggtitle("Race")+coord_flip()+theme_classic()
p4<-qplot(face,data=meta_TR)+ggtitle("Face")+coord_flip()+theme_classic()
p5<-qplot(prop,data=meta_TR)+ggtitle("Prop")+coord_flip()+theme_classic()
grid.arrange(p1,p2,p3,p4,p5,tableGrob(table(as.data.frame(meta_TR[,2:3]))),ncol=3,top="Exploratory Data Analysis")}
foo()
names(azure_df)
#tableGrob(table(as.data.frame(meta_TR[,2:3])))
foo<-function() {p1<-qplot(faceAttributes.gender,data=azure_df)+ggtitle("Sex")+coord_flip()+theme_classic()
p2<-qplot(faceAttributes.age,data=azure_df)+ggtitle("Age")+theme_classic()
grid.arrange(p1,p2,ncol=2,top="Exploratory Data Analysis")}
foo()
#tableGrob(table(as.data.frame(meta_TR[,2:3])))
foo<-function() {p1<-qplot(faceAttributes.gender,data=azure_df)+ggtitle("Sex")+coord_flip()+theme_classic()
p2<-qplot(faceAttributes.age,data=azure_df)+ggtitle("Age")+theme_classic()
p3<-qplot(sex,data=meta)+ggtitle("Sex")+coord_flip()+theme_classic()
p4<-qplot(age,data=meta)+ggtitle("Age")+coord_flip()+theme_classic()
grid.arrange(p1,p2,ncol=2,top="Exploratory Data Analysis")}
foo()
#tableGrob(table(as.data.frame(meta_TR[,2:3])))
foo<-function() {p1<-qplot(faceAttributes.gender,data=azure_df)+ggtitle("Sex")+coord_flip()+theme_classic()
p2<-qplot(faceAttributes.age,data=azure_df)+ggtitle("Age")+theme_classic()
p3<-qplot(sex,data=meta)+ggtitle("Sex")+coord_flip()+theme_classic()
p4<-qplot(age,data=meta)+ggtitle("Age")+coord_flip()+theme_classic()
grid.arrange(p1,p2,p3,p4,ncol=2,top="Exploratory Data Analysis")}
foo()
#tableGrob(table(as.data.frame(meta_TR[,2:3])))
foo<-function() {p1<-qplot(faceAttributes.gender,data=azure_df)+ggtitle("Azure Gender")+coord_flip()+theme_classic()
p2<-qplot(faceAttributes.age,data=azure_df)+ggtitle("Azure Age")+theme_classic()
p3<-qplot(sex,data=meta)+ggtitle("Original Gender")+coord_flip()+theme_classic()
p4<-qplot(age,data=meta)+ggtitle("Original Age")+coord_flip()+theme_classic()
grid.arrange(p1,p2,p3,p4,ncol=2,top="Azure vs. Original Annotation: Gender & Age")}
foo()
#This code may be run multiple times to see the huge diversity of images in the data.
par(mfrow=c(1,3))
selected<-sample(rownames(azure_df),3)
{plotImage(dat[selected[1],],selected[1])
plotImage(dat[selected[2],],selected[2])
plotImage(dat[selected[3],],selected[3])}
#This code may be run multiple times to see the huge diversity of images in the data.
par(mfrow=c(1,3))
selected<-sample(rownames(azure_df),3)
print(selected)
{plotImage(dat[selected[1],],selected[1])
plotImage(dat[selected[2],],selected[2])
plotImage(dat[selected[3],],selected[3])}
View(azure_df)
azure_df<-data.table::fread("Azure_Results.tsv",sep = "\t",header = T,data.table = F)
null_images<-data.table::fread("Failed_Azure_Images.tsv",header=T,data.table=F)
table(azure_df$faceAttributes.gender)
table(meta$sex)
azure_df<-data.table::fread("Azure_Results.tsv",sep = "\t",header = T,data.table = F)
null_images<-data.table::fread("Failed_Azure_Images.tsv",header=T,data.table=F)
source('~/storage_2/misc_repos/R-EigenFaces/Azure_processing.R', echo=TRUE)
azure_df<-data.table::fread("Azure_Results.tsv",sep = "\t",header = T,data.table = F)
null_images<-data.table::fread("Failed_Azure_Images.tsv",header=T,data.table=F)
View(azure_df)
azure_df<-data.table::fread("Azure_Results.tsv",sep = "\t",header = T,data.table = F)
azure_df$n<-as.character(azure_df$n)
rownames(azure_df)<-azure_df$n
null_images<-data.table::fread("Failed_Azure_Images.tsv",header=T,data.table=F)
#This code may be run multiple times to see the huge diversity of images in the data.
par(mfrow=c(1,3))
selected<-sample(rownames(azure_df),3)
print(selected)
{plotImage(dat[selected[1],],selected[1])
plotImage(dat[selected[2],],selected[2])
plotImage(dat[selected[3],],selected[3])}
#This code may be run multiple times to see the huge diversity of images in the data.
par(mfrow=c(1,3))
selected<-sample(rownames(azure_df),3)
print(selected)
{plotImage(dat[selected[1],],selected[1])
plotImage(dat[selected[2],],selected[2])
plotImage(dat[selected[3],],selected[3])}
#This code may be run multiple times to see the huge diversity of images in the data.
par(mfrow=c(1,3))
selected<-sample(rownames(azure_df),3)
print(selected)
{plotImage(dat[selected[1],],selected[1])
plotImage(dat[selected[2],],selected[2])
plotImage(dat[selected[3],],selected[3])}
#This code may be run multiple times to see the huge diversity of images in the data.
par(mfrow=c(1,3))
selected<-sample(rownames(azure_df),3)
print(selected)
{plotImage(dat[selected[1],],selected[1])
plotImage(dat[selected[2],],selected[2])
plotImage(dat[selected[3],],selected[3])}
#This code may be run multiple times to see the huge diversity of images in the data.
par(mfrow=c(1,3))
selected<-sample(rownames(azure_df),3)
print(selected)
{plotImage(dat[selected[1],],selected[1])
plotImage(dat[selected[2],],selected[2])
plotImage(dat[selected[3],],selected[3])}
#This code may be run multiple times to see the huge diversity of images in the data.
par(mfrow=c(1,3))
selected<-sample(rownames(azure_df),3)
print(selected)
{plotImage(dat[selected[1],],selected[1])
plotImage(dat[selected[2],],selected[2])
plotImage(dat[selected[3],],selected[3])}
#This code may be run multiple times to see the huge diversity of images in the data.
par(mfrow=c(1,3))
selected<-sample(rownames(azure_df),3)
print(selected)
{plotImage(dat[selected[1],],selected[1])
plotImage(dat[selected[2],],selected[2])
plotImage(dat[selected[3],],selected[3])}
#This code may be run multiple times to see the huge diversity of images in the data.
par(mfrow=c(1,3))
selected<-sample(rownames(azure_df),3)
print(selected)
{plotImage(dat[selected[1],],selected[1])
plotImage(dat[selected[2],],selected[2])
plotImage(dat[selected[3],],selected[3])}
#This code may be run multiple times to see the huge diversity of images in the data.
par(mfrow=c(1,3))
selected<-sample(rownames(azure_df),3)
print(selected)
{plotImage(dat[selected[1],],selected[1])
plotImage(dat[selected[2],],selected[2])
plotImage(dat[selected[3],],selected[3])}
#This code may be run multiple times to see the huge diversity of images in the data.
par(mfrow=c(1,3))
selected<-sample(rownames(azure_df),3)
print(selected)
{plotImage(dat[selected[1],],selected[1])
plotImage(dat[selected[2],],selected[2])
plotImage(dat[selected[3],],selected[3])}
#This code may be run multiple times to see the huge diversity of images in the data.
par(mfrow=c(1,3))
selected<-sample(rownames(azure_df),3)
print(selected)
{plotImage(dat[selected[1],],selected[1])
plotImage(dat[selected[2],],selected[2])
plotImage(dat[selected[3],],selected[3])}
#This code may be run multiple times to see the huge diversity of images in the data.
par(mfrow=c(1,3))
selected<-sample(rownames(azure_df),3)
print(selected)
{plotImage(dat[selected[1],],selected[1])
plotImage(dat[selected[2],],selected[2])
plotImage(dat[selected[3],],selected[3])}
#This code may be run multiple times to see the huge diversity of images in the data.
par(mfrow=c(1,3))
selected<-sample(null_images$null_images,3)
print(selected)
{plotImage(dat[selected[1],],selected[1])
plotImage(dat[selected[2],],selected[2])
plotImage(dat[selected[3],],selected[3])}
selected
#This code may be run multiple times to see the huge diversity of images in the data.
par(mfrow=c(1,3))
selected<-sample(as.character(null_images$null_images),3)
print(selected)
{plotImage(dat[selected[1],],selected[1])
plotImage(dat[selected[2],],selected[2])
plotImage(dat[selected[3],],selected[3])}
#This code may be run multiple times to see the huge diversity of images in the data.
par(mfrow=c(1,3))
selected<-sample(as.character(null_images$null_images),3)
print(selected)
{plotImage(dat[selected[1],],selected[1])
plotImage(dat[selected[2],],selected[2])
plotImage(dat[selected[3],],selected[3])}
#This code may be run multiple times to see the huge diversity of images in the data.
par(mfrow=c(1,3))
selected<-sample(as.character(null_images$null_images),3)
print(selected)
{plotImage(dat[selected[1],],selected[1])
plotImage(dat[selected[2],],selected[2])
plotImage(dat[selected[3],],selected[3])}
#This code may be run multiple times to see the huge diversity of images in the data.
par(mfrow=c(1,3))
selected<-sample(as.character(null_images$null_images),3)
print(selected)
{plotImage(dat[selected[1],],selected[1])
plotImage(dat[selected[2],],selected[2])
plotImage(dat[selected[3],],selected[3])}
#This code may be run multiple times to see the huge diversity of images in the data.
par(mfrow=c(2,3),mar=c(0,0,4.1,0))
selected<-sample(as.character(null_images$null_images),6)
print(selected)
{plotImage(dat[selected[1],],selected[1])
plotImage(dat[selected[2],],selected[2])
plotImage(dat[selected[3],],selected[3])}
#This code may be run multiple times to see the huge diversity of images in the data.
par(mfrow=c(2,3),mar=c(0,0,4.1,0))
selected<-sample(as.character(null_images$null_images),6)
print(selected)
{plotImage(dat[selected[1],],selected[1])
plotImage(dat[selected[2],],selected[2])
plotImage(dat[selected[3],],selected[3])
plotImage(dat[selected[4],],selected[4])
plotImage(dat[selected[5],],selected[5])
plotImage(dat[selected[6],],selected[6])}
#This code may be run multiple times to see the huge diversity of images in the data.
par(mfrow=c(2,3),mar=c(0,0,4.1,0))
selected<-sample(as.character(null_images$null_images),6)
print(selected)
{plotImage(dat[selected[1],],selected[1])
plotImage(dat[selected[2],],selected[2])
plotImage(dat[selected[3],],selected[3])
plotImage(dat[selected[4],],selected[4])
plotImage(dat[selected[5],],selected[5])
plotImage(dat[selected[6],],selected[6])}
#This code may be run multiple times to see the huge diversity of images in the data.
par(mfrow=c(3,3),mar=c(0,0,4.1,0))
selected<-sample(as.character(null_images$null_images),9)
print(selected)
{plotImage(dat[selected[1],],selected[1])
plotImage(dat[selected[2],],selected[2])
plotImage(dat[selected[3],],selected[3])
plotImage(dat[selected[4],],selected[4])
plotImage(dat[selected[5],],selected[5])
plotImage(dat[selected[6],],selected[6])
plotImage(dat[selected[7],],selected[7])
plotImage(dat[selected[8],],selected[8])
plotImage(dat[selected[9],],selected[9])}
#This code may be run multiple times to see the huge diversity of images in the data.
par(mfrow=c(3,3),mar=c(0,0,4.1,0))
selected<-sample(as.character(null_images$null_images),9)
print(selected)
{plotImage(dat[selected[1],],selected[1])
plotImage(dat[selected[2],],selected[2])
plotImage(dat[selected[3],],selected[3])
plotImage(dat[selected[4],],selected[4])
plotImage(dat[selected[5],],selected[5])
plotImage(dat[selected[6],],selected[6])
plotImage(dat[selected[7],],selected[7])
plotImage(dat[selected[8],],selected[8])
plotImage(dat[selected[9],],selected[9])}
#This code may be run multiple times to see the huge diversity of images in the data.
par(mfrow=c(3,3),mar=c(0,0,4.1,0))
selected<-sample(as.character(null_images$null_images),9)
print(selected)
{plotImage(dat[selected[1],],selected[1])
plotImage(dat[selected[2],],selected[2])
plotImage(dat[selected[3],],selected[3])
plotImage(dat[selected[4],],selected[4])
plotImage(dat[selected[5],],selected[5])
plotImage(dat[selected[6],],selected[6])
plotImage(dat[selected[7],],selected[7])
plotImage(dat[selected[8],],selected[8])
plotImage(dat[selected[9],],selected[9])}
#This code may be run multiple times to see the huge diversity of images in the data.
par(mfrow=c(3,3),mar=c(0,0,4.1,0))
selected<-sample(as.character(null_images$null_images),9)
print(selected)
{plotImage(dat[selected[1],],selected[1])
plotImage(dat[selected[2],],selected[2])
plotImage(dat[selected[3],],selected[3])
plotImage(dat[selected[4],],selected[4])
plotImage(dat[selected[5],],selected[5])
plotImage(dat[selected[6],],selected[6])
plotImage(dat[selected[7],],selected[7])
plotImage(dat[selected[8],],selected[8])
plotImage(dat[selected[9],],selected[9])}
#This code may be run multiple times to see the huge diversity of images in the data.
par(mfrow=c(3,3),mar=c(0,0,4.1,0))
selected<-sample(as.character(null_images$null_images),9)
{plotImage(dat[selected[1],],selected[1])
plotImage(dat[selected[2],],selected[2])
plotImage(dat[selected[3],],selected[3])
plotImage(dat[selected[4],],selected[4])
plotImage(dat[selected[5],],selected[5])
plotImage(dat[selected[6],],selected[6])
plotImage(dat[selected[7],],selected[7])
plotImage(dat[selected[8],],selected[8])
plotImage(dat[selected[9],],selected[9])}
#This code may be run multiple times to see the huge diversity of images in the data.
par(mfrow=c(3,3),mar=c(0,0,4.1,0))
selected<-sample(as.character(null_images$null_images),9)
{plotImage(dat[selected[1],],selected[1])
plotImage(dat[selected[2],],selected[2])
plotImage(dat[selected[3],],selected[3])
plotImage(dat[selected[4],],selected[4])
plotImage(dat[selected[5],],selected[5])
plotImage(dat[selected[6],],selected[6])
plotImage(dat[selected[7],],selected[7])
plotImage(dat[selected[8],],selected[8])
plotImage(dat[selected[9],],selected[9])}
length(unique(azure_df$faceId))
length(azure_df)
nrow(azure_df)
par(mfrow=c(1,3),mar=c(0,0,4.1,0))
selected<-rownames(azure_df[order(-azure_df$faceAttributes.emotion.surprise)])
par(mfrow=c(1,3),mar=c(0,0,4.1,0))
selected<-rownames(azure_df[order(-azure_df$faceAttributes.emotion.surprise),])
{
plotImage(dat[selected[1],],selected[1])
plotImage(dat[selected[2],],selected[2])
plotImage(dat[selected[3],],selected[3])
}
par(mfrow=c(1,3),mar=c(0,0,4.1,0))
selected<-rownames(azure_df[order(-azure_df$faceAttributes.emotion.surprise),])
{
plotImage(dat[selected[1],],selected[1])
plotImage(dat[selected[2],],selected[2])
plotImage(dat[selected[3],],selected[3])
}
par(mfrow=c(1,3),mar=c(0,0,4.1,0))
selected<-rownames(azure_df[order(-azure_df$faceAttributes.emotion.anger),])
{
plotImage(dat[selected[1],],selected[1])
plotImage(dat[selected[2],],selected[2])
plotImage(dat[selected[3],],selected[3])
}
par(mfrow=c(1,3),mar=c(0,0,4.1,0))
selected<-rownames(azure_df[order(-azure_df$faceAttributes.emotion.sadness),])
{
plotImage(dat[selected[1],],selected[1])
plotImage(dat[selected[2],],selected[2])
plotImage(dat[selected[3],],selected[3])
}
source("Azure_classification.R")
azure_df<-data.table::fread("Azure_Results.tsv",sep = "\t",header = T,data.table = F)
azure_df$n<-as.character(azure_df$n);azure_df$faceAttributes.gender<-as.factor(azure_df$faceAttributes.gender)
rownames(azure_df)<-azure_df$n
null_images<-data.table::fread("Failed_Azure_Images.tsv",header=T,data.table=F)
meta_azure<-azure_df$n #only include images that Azure successfully classified
#tableGrob(table(as.data.frame(meta_TR[,2:3])))
foo<-function() {p1<-qplot(faceAttributes.gender,data=azure_df)+ggtitle("Azure Gender")+coord_flip()+theme_classic()
p2<-qplot(faceAttributes.age,data=azure_df)+ggtitle("Azure Age")+theme_classic()
p3<-qplot(sex,data=meta_azure)+ggtitle("Original Gender")+coord_flip()+theme_classic()
p4<-qplot(age,data=meta_azure)+ggtitle("Original Age")+coord_flip()+theme_classic()
grid.arrange(p1,p2,p3,p4,ncol=2,top="Azure vs. Original Annotation: Gender & Age")}
foo()
azure_df<-data.table::fread("Azure_Results.tsv",sep = "\t",header = T,data.table = F)
azure_df$n<-as.character(azure_df$n);azure_df$faceAttributes.gender<-as.factor(azure_df$faceAttributes.gender)
rownames(azure_df)<-azure_df$n
null_images<-data.table::fread("Failed_Azure_Images.tsv",header=T,data.table=F)
meta_azure<-meta[azure_df$n,] #only include images that Azure successfully classified
#tableGrob(table(as.data.frame(meta_TR[,2:3])))
foo<-function() {p1<-qplot(faceAttributes.gender,data=azure_df)+ggtitle("Azure Gender")+coord_flip()+theme_classic()
p2<-qplot(faceAttributes.age,data=azure_df)+ggtitle("Azure Age")+theme_classic()
p3<-qplot(sex,data=meta_azure)+ggtitle("Original Gender")+coord_flip()+theme_classic()
p4<-qplot(age,data=meta_azure)+ggtitle("Original Age")+coord_flip()+theme_classic()
grid.arrange(p1,p2,p3,p4,ncol=2,top="Azure vs. Original Annotation: Gender & Age")}
foo()
#tableGrob(table(as.data.frame(meta_TR[,2:3])))
foo<-function() {p1<-qplot(faceAttributes.gender,data=azure_df)+ggtitle("Azure Gender")+coord_flip()+theme_minimal()
p2<-qplot(faceAttributes.age,data=azure_df)+ggtitle("Azure Age")+theme_minimal()
p3<-qplot(sex,data=meta_azure)+ggtitle("Original Gender")+coord_flip()+theme_minimal()
p4<-qplot(age,data=meta_azure)+ggtitle("Original Age")+coord_flip()+theme_minimal()
grid.arrange(p1,p2,p3,p4,ncol=2,top="Azure vs. Original Annotation: Gender & Age")}
foo()
foo<-function() {p1<-qplot(sex,data=meta_TR)+ggtitle("Sex")+coord_flip()+theme_minimal()
p2<-qplot(age,data=meta_TR)+ggtitle("Age")+coord_flip()+theme_minimal()
p3<-qplot(race,data=meta_TR)+ggtitle("Race")+coord_flip()+theme_minimal()
p4<-qplot(face,data=meta_TR)+ggtitle("Face")+coord_flip()+theme_minimal()
p5<-qplot(prop,data=meta_TR)+ggtitle("Prop")+coord_flip()+theme_minimal()
grid.arrange(p1,p2,p3,p4,p5,tableGrob(table(as.data.frame(meta_TR[,2:3]))),ncol=3,top="Exploratory Data Analysis")}
foo()
#tableGrob(table(as.data.frame(meta_TR[,2:3])))
foo<-function() {p1<-qplot(faceAttributes.gender,data=azure_df,fill = rainbow(n=length(unique(azure_df$faceAttributes.gender)))+ggtitle("Azure Gender")+coord_flip()+theme_minimal()
p2<-qplot(faceAttributes.age,data=azure_df)+ggtitle("Azure Age")+theme_minimal()
#tableGrob(table(as.data.frame(meta_TR[,2:3])))
foo<-function() {p1<-qplot(faceAttributes.gender,data=azure_df,fill = rainbow(n=length(unique(azure_df$faceAttributes.gender))))+ggtitle("Azure Gender")+coord_flip()+theme_minimal()
p2<-qplot(faceAttributes.age,data=azure_df)+ggtitle("Azure Age")+theme_minimal()
p3<-qplot(sex,data=meta_azure)+ggtitle("Original Gender")+coord_flip()+theme_minimal()
p4<-qplot(age,data=meta_azure)+ggtitle("Original Age")+coord_flip()+theme_minimal()
grid.arrange(p1,p2,p3,p4,ncol=2,top="Azure vs. Original Annotation: Gender & Age")}
foo()
#tableGrob(table(as.data.frame(meta_TR[,2:3])))
foo<-function() {p1<-qplot(faceAttributes.gender,data=azure_df,aes(fill = rainbow(n=length(unique(azure_df$faceAttributes.gender)))))+ggtitle("Azure Gender")+coord_flip()+theme_minimal()
p2<-qplot(faceAttributes.age,data=azure_df)+ggtitle("Azure Age")+theme_minimal()
p3<-qplot(sex,data=meta_azure)+ggtitle("Original Gender")+coord_flip()+theme_minimal()
p4<-qplot(age,data=meta_azure)+ggtitle("Original Age")+coord_flip()+theme_minimal()
grid.arrange(p1,p2,p3,p4,ncol=2,top="Azure vs. Original Annotation: Gender & Age")}
foo()
rainbow(n=length(unique(azure_df$faceAttributes.gender
)))
#tableGrob(table(as.data.frame(meta_TR[,2:3])))
foo<-function() {p1<-qplot(faceAttributes.gender,data=azure_df,fill = faceAttributes.gender)+ggtitle("Azure Gender")+coord_flip()+theme_minimal()
p2<-qplot(faceAttributes.age,data=azure_df)+ggtitle("Azure Age")+theme_minimal()
p3<-qplot(sex,data=meta_azure)+ggtitle("Original Gender")+coord_flip()+theme_minimal()
p4<-qplot(age,data=meta_azure)+ggtitle("Original Age")+coord_flip()+theme_minimal()
grid.arrange(p1,p2,p3,p4,ncol=2,top="Azure vs. Original Annotation: Gender & Age")}
foo()
#tableGrob(table(as.data.frame(meta_TR[,2:3])))
foo<-function() {p1<-qplot(faceAttributes.gender,data=azure_df,fill = faceAttributes.gender)+ggtitle("Azure Gender")+coord_flip()+theme_minimal()+scale_colour_brewer(palette = "Set1")+theme(legend.position="none")
p2<-qplot(faceAttributes.age,data=azure_df)+ggtitle("Azure Age")+theme_minimal()
p3<-qplot(sex,data=meta_azure)+ggtitle("Original Gender")+coord_flip()+theme_minimal()
p4<-qplot(age,data=meta_azure)+ggtitle("Original Age")+coord_flip()+theme_minimal()
grid.arrange(p1,p2,p3,p4,ncol=2,top="Azure vs. Original Annotation: Gender & Age")}
foo()
#tableGrob(table(as.data.frame(meta_TR[,2:3])))
foo<-function() {p1<-qplot(faceAttributes.gender,data=azure_df,fill = faceAttributes.gender)+ggtitle("Azure Gender")+coord_flip()+theme_minimal()+scale_colour_brewer(palette = "Set2")+theme(legend.position="none")
p2<-qplot(faceAttributes.age,data=azure_df)+ggtitle("Azure Age")+theme_minimal()
p3<-qplot(sex,data=meta_azure)+ggtitle("Original Gender")+coord_flip()+theme_minimal()
p4<-qplot(age,data=meta_azure)+ggtitle("Original Age")+coord_flip()+theme_minimal()
grid.arrange(p1,p2,p3,p4,ncol=2,top="Azure vs. Original Annotation: Gender & Age")}
foo()
#tableGrob(table(as.data.frame(meta_TR[,2:3])))
foo<-function() {p1<-qplot(faceAttributes.gender,data=azure_df,fill = faceAttributes.gender)+ggtitle("Azure Gender")+coord_flip()+theme_minimal()+scale_colour_brewer(palette = "Accent")+theme(legend.position="none")
p2<-qplot(faceAttributes.age,data=azure_df)+ggtitle("Azure Age")+theme_minimal()
p3<-qplot(sex,data=meta_azure)+ggtitle("Original Gender")+coord_flip()+theme_minimal()
p4<-qplot(age,data=meta_azure)+ggtitle("Original Age")+coord_flip()+theme_minimal()
grid.arrange(p1,p2,p3,p4,ncol=2,top="Azure vs. Original Annotation: Gender & Age")}
foo()
#tableGrob(table(as.data.frame(meta_TR[,2:3])))
foo<-function() {p1<-qplot(faceAttributes.gender,data=azure_df)+ggtitle("Azure Gender")+coord_flip()+theme_minimal()
p2<-qplot(faceAttributes.age,data=azure_df)+ggtitle("Azure Age")+theme_minimal()
p3<-qplot(sex,data=meta_azure)+ggtitle("Original Gender")+coord_flip()+theme_minimal()
p4<-qplot(age,data=meta_azure)+ggtitle("Original Age")+coord_flip()+theme_minimal()
grid.arrange(p1,p2,p3,p4,ncol=2,top="Azure vs. Original Annotation: Gender & Age")}
foo()
cMat_Azure<-confusionMatrix(data = azure_df$faceAttributes.gender, reference = meta_azure$sex)
levels(meta_azure$sex)
azure_df<-data.table::fread("Azure_Results.tsv",sep = "\t",header = T,data.table = F)
azure_df$n<-as.character(azure_df$n);azure_df$faceAttributes.gender<-as.factor(azure_df$faceAttributes.gender)
rownames(azure_df)<-azure_df$n
null_images<-data.table::fread("Failed_Azure_Images.tsv",header=T,data.table=F)
meta_azure<-meta[azure_df$n,] #only include images that Azure successfully classified
meta_azure$sex<-as.factor(meta_azure$sex)
rownames(meta_azure)==azure_df$n
table(rownames(meta_azure)==azure_df$n)
# hard coded for gender
cMat_Azure<-confusionMatrix(data = azure_df$faceAttributes.gender, reference = meta_azure$sex)
kable(cMat_FDA$table,"html") %>%
kable_styling(bootstrap_options = "striped", full_width = F,position="float_left") %>%
add_header_above(c("Pred.","Ref."= 2)) %>%
add_header_above(c("FDA"= 3))
# hard coded for gender
cMat_Azure<-confusionMatrix(data = azure_df$faceAttributes.gender, reference = meta_azure$sex)
kable(cMat_FDA$table,"html") %>%
kable_styling(bootstrap_options = "striped", full_width = F,position="float_left") %>%
add_header_above(c("Pred.","Ref."= 2)) %>%
add_header_above(c("Azure"= 3))
# hard coded for gender
cMat_Azure<-confusionMatrix(data = azure_df$faceAttributes.gender, reference = meta_azure$sex)
kable(cMat_FDA$table,"html") %>%
kable_styling(bootstrap_options = "striped", full_width = F,position="float_left") %>%
add_header_above(c("Pred.","Ref."= 2)) %>%
add_header_above(c("Azure"= 3))
perf<-rbind(FDA=c(cMat_FDA$overall["Accuracy"],cMat_FDA$byClass[c(1,2,5,6,7,8,9,10,11)]),
XGB=c(cMat_XGB$overall["Accuracy"],cMat_XGB$byClass[c(1,2,5,6,7,8,9,10,11)]),
C5.0=c(cMat_C5.0$overall["Accuracy"],cMat_C5.0$byClass[c(1,2,5,6,7,8,9,10,11)]),
GMLBoost=c(cMat_GLMB$overall["Accuracy"],cMat_GLMB$byClass[c(1,2,5,6,7,8,9,10,11)]),
Azure=c(cMat_Azure$overall["Accuracy"],cMat_Azure$byClass[c(1,2,5,6,7,8,9,10,11)]))
kable(perf,"html") %>%
kable_styling(bootstrap_options = "striped", full_width = F)
par(mfrow = c(2, 5))
par(oma = rep(2, 4), mar = c(0, 0, 3, 0))
for(i in seq(1:10)) {
plotImage(t(svd.res$v[,i]),paste0(i))
}
par(mfrow = c(2, 5))
par(mar = c(0, 0, 4.1, 0))
for(i in seq(1:10)) {
plotImage(t(svd.res$v[,i]),paste0(i))
}
knit_with_parameters('~/storage_2/misc_repos/R-EigenFaces/eigenface_notebook.Rmd')
# The models have been generated with the generateModels.R script.
load(file.path("models","sexliftcent_models.Rdata"))
